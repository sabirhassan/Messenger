{"ast":null,"code":"var _jsxFileName = \"/home/sabirhassan/Desktop/imroz2/client/src/components/signup/signup.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport axios from 'axios';\nimport styles from './style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (whichInput, event) => {\n      switch (whichInput) {\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: event.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    this.submitSignup = e => {\n      e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n      if (!this.formIsValid()) {\n        this.setState({\n          signupError: 'Passwords do not match'\n        });\n        return;\n      } //implement the code for send request to server\n\n      /*\n          firebase\n            .auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(authRes => {\n              const userObj = {\n                email: authRes.user.email,\n                friends: [],\n                messages: []\n              };\n              firebase\n                .firestore()\n                .collection('users')\n                .doc(this.state.email)\n                .set(userObj)\n                .then(() => {\n                  this.props.history.push('/dashboard');\n              }, dbErr => {\n                console.log('Failed to add user to the database: ', dbErr);\n                this.setState({ signupError: 'Failed to add user' });\n              });\n          }, authErr => {\n            console.log('Failed to create user: ', authErr);\n            this.setState({ signupError: 'Failed to add user' });\n          });\n        };*/\n\n\n      const user = {\n        username: this.state.email,\n        password: this.state.password\n      };\n      axios.post('http://localhost:9000/signup', user).then(res => {\n        console.log(res);\n\n        if (res.data) {\n          localStorage.setItem(\"username\", res.data.username);\n          localStorage.setItem(\"password\", res.data.password);\n          this.props.history.push('/dashboard');\n        } else {\n          alert(res.data);\n        }\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Sign Up!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.submitSignup(e),\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"signup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Enter Your Email\"), /*#__PURE__*/React.createElement(Input, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: e => this.userTyping('email', e),\n      id: \"signup-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"signup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Create A Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('password', e),\n      id: \"signup-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"signup-password-confirmation-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Confirm Your Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('passwordConfirmation', e),\n      id: \"signup-password-confirmation-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Submit\")), this.state.signupError ? /*#__PURE__*/React.createElement(Typography, {\n      className: classes.errorText,\n      component: \"h5\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, this.state.signupError) : null, /*#__PURE__*/React.createElement(\"h5\", {\n      className: classes.hasAccountHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Already Have An Account?\"), /*#__PURE__*/React.createElement(Link, {\n      className: classes.logInLink,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Log In!\")));\n  }\n\n}\n\nexport default withStyles(styles)(Signup);","map":{"version":3,"sources":["/home/sabirhassan/Desktop/imroz2/client/src/components/signup/signup.js"],"names":["Link","React","axios","styles","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","Signup","Component","constructor","userTyping","whichInput","event","setState","email","target","value","password","passwordConfirmation","formIsValid","state","submitSignup","e","preventDefault","signupError","user","username","post","then","res","console","log","data","localStorage","setItem","props","history","push","alert","render","classes","main","paper","form","submit","errorText","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport React from 'react';\nimport axios from 'axios';\n\n\nimport styles from './style';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Signup extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n\n  userTyping = (whichInput, event) => {\n    switch (whichInput) {\n      case 'email':\n        this.setState({ email: event.target.value });\n        break;\n\n      case 'password':\n        this.setState({ password: event.target.value });\n        break;\n\n      case 'passwordConfirmation':\n        this.setState({ passwordConfirmation: event.target.value });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  submitSignup = (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n    if(!this.formIsValid()) {\n      this.setState({ signupError: 'Passwords do not match' });\n      return;\n    }\n\n    //implement the code for send request to server\n/*\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(authRes => {\n        const userObj = {\n          email: authRes.user.email,\n          friends: [],\n          messages: []\n        };\n        firebase\n          .firestore()\n          .collection('users')\n          .doc(this.state.email)\n          .set(userObj)\n          .then(() => {\n            this.props.history.push('/dashboard');\n        }, dbErr => {\n          console.log('Failed to add user to the database: ', dbErr);\n          this.setState({ signupError: 'Failed to add user' });\n        });\n    }, authErr => {\n      console.log('Failed to create user: ', authErr);\n      this.setState({ signupError: 'Failed to add user' });\n    });\n  };*/\n\n  const user = {username:this.state.email,password:this.state.password}\n\n  axios.post('http://localhost:9000/signup', user)\n  .then(res => {\n    console.log(res);\n    if(res.data){\n\n      localStorage.setItem(\"username\",res.data.username);\n      localStorage.setItem(\"password\",res.data.password);\n      this.props.history.push('/dashboard');\n    }\n    else{\n      alert(res.data);\n    }\n  })\n\n\n  };\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up!\n          </Typography>\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\n            </FormControl>\n            <FormControl required fullWidth margin='normal'>\n              <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\n            </FormControl>\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\n          </form>\n          { \n            this.state.signupError ? \n            <Typography className={classes.errorText} component='h5' variant='h6'>\n              {this.state.signupError}\n            </Typography> :\n            null\n          }\n          <h5 className={classes.hasAccountHeader}>Already Have An Account?</h5>\n          <Link className={classes.logInLink} to='/login'>Log In!</Link>\n        </Paper>\n      </main>\n    );\n  }\n\n\n}\n\nexport default withStyles(styles)(Signup);"]},"metadata":{},"sourceType":"module"}